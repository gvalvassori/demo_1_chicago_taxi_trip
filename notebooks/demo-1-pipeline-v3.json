{"displayName": "demo-1-pipeline-v3", "labels": {"tfx_py_version": "3-10", "tfx_runner": "kubeflow_v2", "tfx_version": "1-15-1"}, "pipelineSpec": {"components": {"evaluator_demo_1": {"executorLabel": "evaluator_demo_1_executor", "inputDefinitions": {"artifacts": {"baseline_model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}, "examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}}, "parameters": {"eval_config": {"type": "STRING"}, "example_splits": {"type": "STRING"}, "fairness_indicator_thresholds": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"blessing": {"artifactType": {"instanceSchema": "title: tfx.ModelBlessing\ntype: object\n"}}, "evaluation": {"artifactType": {"instanceSchema": "title: tfx.ModelEvaluation\ntype: object\n"}}}}}, "example_gen_demo_1": {"executorLabel": "example_gen_demo_1_executor", "inputDefinitions": {"parameters": {"input_config": {"type": "STRING"}, "output_config": {"type": "STRING"}, "output_data_format": {"type": "INT"}, "output_file_format": {"type": "INT"}}}, "outputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}}}, "latest_blessing_demo_1-model-blessing-resolver": {"executorLabel": "latest_blessing_demo_1-model-blessing-resolver_executor", "outputDefinitions": {"artifacts": {"model_blessing": {"artifactType": {"instanceSchema": "title: tfx.ModelBlessing\ntype: object\n"}}}}}, "latest_blessing_demo_1-model-resolver": {"executorLabel": "latest_blessing_demo_1-model-resolver_executor", "inputDefinitions": {"artifacts": {"input": {"artifactType": {"instanceSchema": "title: tfx.ModelBlessing\ntype: object\n"}}}}, "outputDefinitions": {"artifacts": {"model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}}}}, "pusher_demo_1": {"executorLabel": "pusher_demo_1_executor", "inputDefinitions": {"artifacts": {"model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}}, "parameters": {"custom_config": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"pushed_model": {"artifactType": {"instanceSchema": "title: tfx.PushedModel\ntype: object\n"}}}}}, "schema_gen_demo_1": {"executorLabel": "schema_gen_demo_1_executor", "inputDefinitions": {"artifacts": {"statistics": {"artifactType": {"instanceSchema": "title: tfx.ExampleStatistics\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}, "parameters": {"exclude_splits": {"type": "STRING"}, "infer_feature_shape": {"type": "INT"}}}, "outputDefinitions": {"artifacts": {"schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}}}}, "statistics_gen_demo_1": {"executorLabel": "statistics_gen_demo_1_executor", "inputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}, "parameters": {"exclude_splits": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"statistics": {"artifactType": {"instanceSchema": "title: tfx.ExampleStatistics\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}}}, "trainer_demo_1": {"executorLabel": "trainer_demo_1_executor", "inputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "hyperparameters": {"artifactType": {"instanceSchema": "title: tfx.HyperParameters\ntype: object\n"}}, "transform_graph": {"artifactType": {"instanceSchema": "title: tfx.TransformGraph\ntype: object\n"}}}, "parameters": {"custom_config": {"type": "STRING"}, "eval_args": {"type": "STRING"}, "module_path": {"type": "STRING"}, "train_args": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}, "model_run": {"artifactType": {"instanceSchema": "title: tfx.ModelRun\ntype: object\n"}}}}}, "transform_demo_1": {"executorLabel": "transform_demo_1_executor", "inputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}}, "parameters": {"custom_config": {"type": "STRING"}, "disable_statistics": {"type": "INT"}, "force_tf_compat_v1": {"type": "INT"}, "module_path": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"post_transform_anomalies": {"artifactType": {"instanceSchema": "title: tfx.ExampleAnomalies\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "post_transform_schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}, "post_transform_stats": {"artifactType": {"instanceSchema": "title: tfx.ExampleStatistics\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "pre_transform_schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}, "pre_transform_stats": {"artifactType": {"instanceSchema": "title: tfx.ExampleStatistics\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "transform_graph": {"artifactType": {"instanceSchema": "title: tfx.TransformGraph\ntype: object\n"}}, "transformed_examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "updated_analyzer_cache": {"artifactType": {"instanceSchema": "title: tfx.TransformCache\ntype: object\n"}}}}}, "tuner_demo_1": {"executorLabel": "tuner_demo_1_executor", "inputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "transform_graph": {"artifactType": {"instanceSchema": "title: tfx.TransformGraph\ntype: object\n"}}}, "parameters": {"custom_config": {"type": "STRING"}, "eval_args": {"type": "STRING"}, "module_path": {"type": "STRING"}, "train_args": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"best_hyperparameters": {"artifactType": {"instanceSchema": "title: tfx.HyperParameters\ntype: object\n"}}, "tuner_results": {"artifactType": {"instanceSchema": "title: tfx.TunerResults\ntype: object\n"}}}}}}, "deploymentSpec": {"executors": {"evaluator_demo_1_executor": {"container": {"args": ["--executor_class_path", "tfx.components.evaluator.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=demoespecialidadgcp", "--temp_location=gs://demo-1-chicago-taxi-fare/tmp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.1"}}, "example_gen_demo_1_executor": {"container": {"args": ["--executor_class_path", "tfx.extensions.google_cloud_big_query.example_gen.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=demoespecialidadgcp", "--temp_location=gs://demo-1-chicago-taxi-fare/tmp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.1"}}, "latest_blessing_demo_1-model-blessing-resolver_executor": {"resolver": {"outputArtifactQueries": {"model_blessing": {"filter": "schema_title=\"tfx.ModelBlessing\" AND state=LIVE AND metadata.blessed.number_value=1"}}}}, "latest_blessing_demo_1-model-resolver_executor": {"resolver": {"outputArtifactQueries": {"model": {"filter": "schema_title=\"tfx.Model\" AND state=LIVE AND name=\"{{$.inputs.artifacts['input'].metadata['current_model_id']}}\""}}}}, "pusher_demo_1_executor": {"container": {"args": ["--executor_class_path", "tfx.extensions.google_cloud_ai_platform.pusher.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=demoespecialidadgcp", "--temp_location=gs://demo-1-chicago-taxi-fare/tmp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.1"}}, "schema_gen_demo_1_executor": {"container": {"args": ["--executor_class_path", "tfx.components.schema_gen.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=demoespecialidadgcp", "--temp_location=gs://demo-1-chicago-taxi-fare/tmp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.1"}}, "statistics_gen_demo_1_executor": {"container": {"args": ["--executor_class_path", "tfx.components.statistics_gen.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=demoespecialidadgcp", "--temp_location=gs://demo-1-chicago-taxi-fare/tmp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.1"}}, "trainer_demo_1_executor": {"container": {"args": ["--executor_class_path", "tfx.extensions.google_cloud_ai_platform.trainer.executor.GenericExecutor", "--json_serialized_invocation_args", "{{$}}", "--project=demoespecialidadgcp", "--temp_location=gs://demo-1-chicago-taxi-fare/tmp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.1"}}, "transform_demo_1_executor": {"container": {"args": ["--executor_class_path", "tfx.components.transform.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=demoespecialidadgcp", "--temp_location=gs://demo-1-chicago-taxi-fare/tmp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.1"}}, "tuner_demo_1_executor": {"container": {"args": ["--executor_class_path", "tfx.components.tuner.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=demoespecialidadgcp", "--temp_location=gs://demo-1-chicago-taxi-fare/tmp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.1"}}}}, "pipelineInfo": {"name": "demo-1-pipeline-v3"}, "root": {"dag": {"tasks": {"evaluator_demo_1": {"cachingOptions": {"enableCache": true}, "componentRef": {"name": "evaluator_demo_1"}, "dependentTasks": ["example_gen_demo_1", "latest_blessing_demo_1-model-resolver", "trainer_demo_1"], "inputs": {"artifacts": {"baseline_model": {"taskOutputArtifact": {"outputArtifactKey": "model", "producerTask": "latest_blessing_demo_1-model-resolver"}}, "examples": {"taskOutputArtifact": {"outputArtifactKey": "examples", "producerTask": "example_gen_demo_1"}}, "model": {"taskOutputArtifact": {"outputArtifactKey": "model", "producerTask": "trainer_demo_1"}}}, "parameters": {"eval_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"metrics_specs\": [\n    {\n      \"metrics\": [\n        {\n          \"class_name\": \"ExampleCount\"\n        },\n        {\n          \"class_name\": \"MeanAbsoluteError\",\n          \"threshold\": {\n            \"change_threshold\": {\n              \"direction\": \"LOWER_IS_BETTER\",\n              \"relative\": 1.2\n            },\n            \"value_threshold\": {\n              \"lower_bound\": 0.0,\n              \"upper_bound\": 2.0\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"model_specs\": [\n    {\n      \"label_key\": \"trip_total\"\n    }\n  ],\n  \"slicing_specs\": [\n    {}\n  ]\n}"}}}, "example_splits": {"runtimeValue": {"constantValue": {"stringValue": "null"}}}, "fairness_indicator_thresholds": {"runtimeValue": {"constantValue": {"stringValue": "null"}}}}}, "taskInfo": {"name": "evaluator_demo_1"}}, "example_gen_demo_1": {"cachingOptions": {"enableCache": true}, "componentRef": {"name": "example_gen_demo_1"}, "inputs": {"parameters": {"input_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"splits\": [\n    {\n      \"name\": \"single_split\",\n      \"pattern\": \"\\n        SELECT \\n            trip_seconds,\\n            trip_miles,\\n            trip_total,\\n            CASE WHEN EXTRACT(DAYOFWEEK FROM trip_start_timestamp) < 5 THEN 1 ELSE 0 END AS work_day,\\n            CASE WHEN EXTRACT(HOUR FROM trip_start_timestamp) BETWEEN 8 AND 18 THEN 1 ELSE 0 END AS work_hour,\\n            trip_miles/(trip_seconds/3600) AS trip_speed,\\n            pickup_community_area,\\n            dropoff_community_area\\n        FROM \\n            `demoespecialidadgcp.demo_1.view_chicago_taxi_trips`\\n        WHERE\\n            trip_seconds > 0 AND trip_seconds < 7200 AND\\n            trip_miles > 0 AND\\n            trip_total > 0 AND trip_total < 250 AND\\n            payment_type = \\\"Cash\\\" AND payment_type = \\\"Cash\\\" AND\\n            trip_start_timestamp IS NOT NULL AND\\n            pickup_community_area IS NOT NULL AND\\n            dropoff_community_area IS NOT NULL AND\\n            RAND() < 2000000/(SELECT COUNT(*) FROM `demoespecialidadgcp.demo_1.view_chicago_taxi_trips`)\\n        LIMIT 200000\\n\"\n    }\n  ]\n}"}}}, "output_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"split_config\": {\n    \"splits\": [\n      {\n        \"hash_buckets\": 2,\n        \"name\": \"train\"\n      },\n      {\n        \"hash_buckets\": 1,\n        \"name\": \"eval\"\n      }\n    ]\n  }\n}"}}}, "output_data_format": {"runtimeValue": {"constantValue": {"intValue": "6"}}}, "output_file_format": {"runtimeValue": {"constantValue": {"intValue": "5"}}}}}, "taskInfo": {"name": "example_gen_demo_1"}}, "latest_blessing_demo_1-model-blessing-resolver": {"componentRef": {"name": "latest_blessing_demo_1-model-blessing-resolver"}, "taskInfo": {"name": "latest_blessing_demo_1-model-blessing-resolver"}}, "latest_blessing_demo_1-model-resolver": {"componentRef": {"name": "latest_blessing_demo_1-model-resolver"}, "inputs": {"artifacts": {"input": {"taskOutputArtifact": {"outputArtifactKey": "model_blessing", "producerTask": "latest_blessing_demo_1-model-blessing-resolver"}}}}, "taskInfo": {"name": "latest_blessing_demo_1-model-resolver"}}, "pusher_demo_1": {"cachingOptions": {"enableCache": true}, "componentRef": {"name": "pusher_demo_1"}, "dependentTasks": ["trainer_demo_1"], "inputs": {"artifacts": {"model": {"taskOutputArtifact": {"outputArtifactKey": "model", "producerTask": "trainer_demo_1"}}}, "parameters": {"custom_config": {"runtimeValue": {"constantValue": {"stringValue": "{\"ai_platform_enable_vertex\": true, \"ai_platform_serving_args\": {\"endpoint_name\": \"demo-1-model-v3\", \"machine_type\": \"n1-standard-2\", \"project_id\": \"demoespecialidadgcp\"}, \"ai_platform_vertex_container_image_uri\": \"us-docker.pkg.dev/vertex-ai/prediction/tf2-cpu.2-11:latest\", \"ai_platform_vertex_region\": \"us-east1\"}"}}}}}, "taskInfo": {"name": "pusher_demo_1"}}, "schema_gen_demo_1": {"cachingOptions": {"enableCache": true}, "componentRef": {"name": "schema_gen_demo_1"}, "dependentTasks": ["statistics_gen_demo_1"], "inputs": {"artifacts": {"statistics": {"taskOutputArtifact": {"outputArtifactKey": "statistics", "producerTask": "statistics_gen_demo_1"}}}, "parameters": {"exclude_splits": {"runtimeValue": {"constantValue": {"stringValue": "[]"}}}, "infer_feature_shape": {"runtimeValue": {"constantValue": {"intValue": "1"}}}}}, "taskInfo": {"name": "schema_gen_demo_1"}}, "statistics_gen_demo_1": {"cachingOptions": {"enableCache": true}, "componentRef": {"name": "statistics_gen_demo_1"}, "dependentTasks": ["example_gen_demo_1"], "inputs": {"artifacts": {"examples": {"taskOutputArtifact": {"outputArtifactKey": "examples", "producerTask": "example_gen_demo_1"}}}, "parameters": {"exclude_splits": {"runtimeValue": {"constantValue": {"stringValue": "[]"}}}}}, "taskInfo": {"name": "statistics_gen_demo_1"}}, "trainer_demo_1": {"cachingOptions": {"enableCache": true}, "componentRef": {"name": "trainer_demo_1"}, "dependentTasks": ["transform_demo_1", "tuner_demo_1"], "inputs": {"artifacts": {"examples": {"taskOutputArtifact": {"outputArtifactKey": "transformed_examples", "producerTask": "transform_demo_1"}}, "hyperparameters": {"taskOutputArtifact": {"outputArtifactKey": "best_hyperparameters", "producerTask": "tuner_demo_1"}}, "transform_graph": {"taskOutputArtifact": {"outputArtifactKey": "transform_graph", "producerTask": "transform_demo_1"}}}, "parameters": {"custom_config": {"runtimeValue": {"constantValue": {"stringValue": "{\"ai_platform_enable_vertex\": true, \"ai_platform_training_args\": {\"project\": \"demoespecialidadgcp\", \"worker_pool_specs\": [{\"container_spec\": {\"image_uri\": \"gcr.io/tfx-oss-public/tfx:1.15.1\"}, \"machine_spec\": {\"machine_type\": \"n1-standard-8\"}, \"replica_count\": 1}]}, \"ai_platform_vertex_region\": \"us-east1\", \"use_gpu\": false}"}}}, "eval_args": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"num_steps\": 3125\n}"}}}, "module_path": {"runtimeValue": {"constantValue": {"stringValue": "chicago_taxi_trainer@gs://demo-1-chicago-taxi-fare/pipeline_root/demo-1-pipeline-v3/_wheels/tfx_user_code_trainer_demo_1-0.0+bbecbe5e5399b8a0b408920baaf5e75d23f63bb0f091aef4b97f9059a3755477-py3-none-any.whl"}}}, "train_args": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"num_steps\": 3125\n}"}}}}}, "taskInfo": {"name": "trainer_demo_1"}}, "transform_demo_1": {"cachingOptions": {"enableCache": true}, "componentRef": {"name": "transform_demo_1"}, "dependentTasks": ["example_gen_demo_1", "schema_gen_demo_1"], "inputs": {"artifacts": {"examples": {"taskOutputArtifact": {"outputArtifactKey": "examples", "producerTask": "example_gen_demo_1"}}, "schema": {"taskOutputArtifact": {"outputArtifactKey": "schema", "producerTask": "schema_gen_demo_1"}}}, "parameters": {"custom_config": {"runtimeValue": {"constantValue": {"stringValue": "null"}}}, "disable_statistics": {"runtimeValue": {"constantValue": {"intValue": "0"}}}, "force_tf_compat_v1": {"runtimeValue": {"constantValue": {"intValue": "0"}}}, "module_path": {"runtimeValue": {"constantValue": {"stringValue": "chicago_taxi_trainer@gs://demo-1-chicago-taxi-fare/pipeline_root/demo-1-pipeline-v3/_wheels/tfx_user_code_transform_demo_1-0.0+bbecbe5e5399b8a0b408920baaf5e75d23f63bb0f091aef4b97f9059a3755477-py3-none-any.whl"}}}}}, "taskInfo": {"name": "transform_demo_1"}}, "tuner_demo_1": {"cachingOptions": {"enableCache": true}, "componentRef": {"name": "tuner_demo_1"}, "dependentTasks": ["transform_demo_1"], "inputs": {"artifacts": {"examples": {"taskOutputArtifact": {"outputArtifactKey": "transformed_examples", "producerTask": "transform_demo_1"}}, "transform_graph": {"taskOutputArtifact": {"outputArtifactKey": "transform_graph", "producerTask": "transform_demo_1"}}}, "parameters": {"custom_config": {"runtimeValue": {"constantValue": {"stringValue": "null"}}}, "eval_args": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"num_steps\": 3125\n}"}}}, "module_path": {"runtimeValue": {"constantValue": {"stringValue": "chicago_taxi_trainer@gs://demo-1-chicago-taxi-fare/pipeline_root/demo-1-pipeline-v3/_wheels/tfx_user_code_tuner_demo_1-0.0+bbecbe5e5399b8a0b408920baaf5e75d23f63bb0f091aef4b97f9059a3755477-py3-none-any.whl"}}}, "train_args": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"num_steps\": 3125\n}"}}}}}, "taskInfo": {"name": "tuner_demo_1"}}}}}, "schemaVersion": "2.0.0", "sdkVersion": "tfx-1.15.1"}, "runtimeConfig": {"gcsOutputDirectory": "gs://demo-1-chicago-taxi-fare/pipeline_root/demo-1-pipeline-v3"}}